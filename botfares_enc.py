# Fares Alex
# Facebook Smm KingDom Bot
# Time: Sat Aug 23 03:42:41 2025
# ----------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))
